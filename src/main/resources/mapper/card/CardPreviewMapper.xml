<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weird.mapper.card.CardPreviewMapper">
    <cache type="org.apache.ibatis.cache.impl.PerpetualCache"
           size="2048"
           eviction="LRU"
           readOnly="true"/>
    <resultMap id="BaseResultMap" type="com.weird.model.CardPreviewModel">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="atk" jdbcType="VARCHAR" property="atk"/>
        <result column="def" jdbcType="VARCHAR" property="def"/>
        <result column="level" jdbcType="VARCHAR" property="level"/>
        <result column="race" jdbcType="VARCHAR" property="race"/>
        <result column="attribute" jdbcType="VARCHAR" property="attribute"/>
        <result column="desc" jdbcType="VARCHAR" property="desc"/>
    </resultMap>
    <select id="getPreviewByName" resultMap="BaseResultMap">
        select datas.id id,
        texts.name name,
        datas.type type,
        datas.atk atk,
        datas.def def,
        datas.level level,
        datas.race race,
        datas.attribute attribute,
        texts.desc desc
        from datas inner join texts on datas.id = texts.id and texts.name = #{name}
    </select>

    <select id="getPreviewByCode" resultMap="BaseResultMap">
        select datas.id id,
        texts.name name,
        datas.type type,
        datas.atk atk,
        datas.def def,
        datas.level level,
        datas.race race,
        datas.attribute attribute,
        texts.desc desc
        from datas
        inner join texts on datas.id = texts.id and texts.id = #{code}
    </select>

    <select id="blurSearch" resultType="java.lang.String">
        select distinct texts.name
        from texts
        where
            texts.name like "%"||#{word}||"%"
        or
            texts.desc like "%"||#{word}||"%"
    </select>

    <select id="multiBlurSearch" resultType="java.lang.String">
        select distinct t.name
        from texts t
        inner join datas d on d.id = t.id
        <where>
            <if test="param.cardNameList != null and param.cardNameList.size() > 0">
                and
                <foreach collection="param.cardNameList" index="index" item="word" separator="and">
                    t.name like "%"||#{word}||"%"
                </foreach>
            </if>
            <if test="param.cardDescList != null and param.cardDescList.size() > 0">
                and
                <foreach collection="param.cardDescList" index="index" item="word" separator="and">
                    (
                        t.name like "%"||#{word}||"%"
                    or
                        t.desc like "%"||#{word}||"%"
                    )
                </foreach>
            </if>
            <if test="param.cardTypeList != null and param.cardTypeList.size() > 0">
                and
                <foreach collection="param.cardTypeList" index="index" item="cardType" separator="and">
                    <if test="cardType.value == 16">
                        (d.type &amp; #{cardType.value} = #{cardType.value} or d.type = 2 or d.type = 4)
                    </if>
                    <if test="cardType.value == 18">
                        d.type = 2
                    </if>
                    <if test="cardType.value == 20">
                        d.type = 4
                    </if>
                    <if test="cardType.value != 16 and cardType.value != 18 and cardType.value != 20">
                        d.type &amp; #{cardType.value} = #{cardType.value}
                    </if>
                </foreach>
            </if>
            <if test="param.cardAttributeList != null and param.cardAttributeList.size() > 0">
                and
                <foreach collection="param.cardAttributeList" index="index" item="cardAttribute" separator="and">
                    d.attribute &amp; #{cardAttribute.value} != 0
                </foreach>
            </if>
            <if test="param.cardRaceList != null and param.cardRaceList.size() > 0">
                and
                <foreach collection="param.cardRaceList" index="index" item="cardRace" separator="and">
                    d.race &amp; #{cardRace.value} != 0
                </foreach>
            </if>

            <if test="param.cardLevel != null">
                and d.level &amp; 0xffff = #{param.cardLevel}
            </if>
            <if test="param.cardLevelGe != null and param.cardLevelGe.size() > 0">
                and
                <foreach collection="param.cardLevelGe" index="index" item="value" separator="and">
                    d.level &amp; 0xffff &gt;= #{value}
                </foreach>
            </if>
            <if test="param.cardLevelG != null and param.cardLevelG.size() > 0">
                and
                <foreach collection="param.cardLevelG" index="index" item="value" separator="and">
                    d.level &amp; 0xffff &gt; #{value}
                </foreach>
            </if>
            <if test="param.cardLevelLe != null and param.cardLevelLe.size() > 0">
                and
                <foreach collection="param.cardLevelLe" index="index" item="value" separator="and">
                    d.level &amp; 0xffff &lt;= #{value}
                </foreach>
            </if>
            <if test="param.cardLevelL != null and param.cardLevelL.size() > 0">
                and
                <foreach collection="param.cardLevelL" index="index" item="value" separator="and">
                    d.level &amp; 0xffff &lt; #{value}
                </foreach>
            </if>

            <if test="param.cardAttack != null">
                and d.atk = #{param.cardAttack}
            </if>
            <if test="param.cardAttackGe != null and param.cardAttackGe.size() > 0">
                and
                <foreach collection="param.cardAttackGe" index="index" item="value" separator="and">
                    d.atk &gt;= #{value}
                </foreach>
            </if>
            <if test="param.cardAttackG != null and param.cardAttackG.size() > 0">
                and
                <foreach collection="param.cardAttackG" index="index" item="value" separator="and">
                    d.atk &gt; #{value}
                </foreach>
            </if>
            <if test="param.cardAttackLe != null and param.cardAttackLe.size() > 0">
                and
                <foreach collection="param.cardAttackLe" index="index" item="value" separator="and">
                    d.atk &lt;= #{value}
                </foreach>
            </if>
            <if test="param.cardAttackL != null and param.cardAttackL.size() > 0">
                and
                <foreach collection="param.cardAttackL" index="index" item="value" separator="and">
                    d.atk &lt; #{value}
                </foreach>
            </if>

            <if test="param.cardDefense != null">
                and d.def = #{param.cardDefense} and d.type &amp; 0x4000000 = 0
            </if>
            <if test="param.cardDefenseGe != null and param.cardDefenseGe.size() > 0">
                and
                <foreach collection="param.cardDefenseGe" index="index" item="value" separator="and">
                    d.def &gt;= #{value} and d.type &amp; 0x4000000 = 0
                </foreach>
            </if>
            <if test="param.cardDefenseG != null and param.cardDefenseG.size() > 0">
                and
                <foreach collection="param.cardDefenseG" index="index" item="value" separator="and">
                    d.def &gt; #{value} and d.type &amp; 0x4000000 = 0
                </foreach>
            </if>
            <if test="param.cardDefenseLe != null and param.cardDefenseLe.size() > 0">
                and
                <foreach collection="param.cardDefenseLe" index="index" item="value" separator="and">
                    d.def &lt;= #{value} and d.type &amp; 0x4000000 = 0
                </foreach>
            </if>
            <if test="param.cardDefenseL != null and param.cardDefenseL.size() > 0">
                and
                <foreach collection="param.cardDefenseL" index="index" item="value" separator="and">
                    d.def &lt; #{value} and d.type &amp; 0x4000000 = 0
                </foreach>
            </if>

            <if test="param.cardScale != null">
                and (d.level &amp; 0xff0000) / 0xffff = #{param.cardScale}
            </if>
            <if test="param.cardScaleGe != null and param.cardScaleGe.size() > 0">
                and
                <foreach collection="param.cardScaleGe" index="index" item="value" separator="and">
                    (d.level &amp; 0xff0000) / 0xffff &gt;= #{value}
                </foreach>
            </if>
            <if test="param.cardScaleG != null and param.cardScaleG.size() > 0">
                and
                <foreach collection="param.cardScaleG" index="index" item="value" separator="and">
                    (d.level &amp; 0xff0000) / 0xffff &gt; #{value}
                </foreach>
            </if>
            <if test="param.cardScaleLe != null and param.cardScaleLe.size() > 0">
                and
                <foreach collection="param.cardScaleLe" index="index" item="value" separator="and">
                    (d.level &amp; 0xff0000) / 0xffff &lt;= #{value}
                </foreach>
            </if>
            <if test="param.cardScaleL != null and param.cardScaleL.size() > 0">
                and
                <foreach collection="param.cardScaleL" index="index" item="value" separator="and">
                    (d.level &amp; 0xff0000) / 0xffff &lt; #{value}
                </foreach>
            </if>

        </where>
        order by d.type &amp; 0x4 asc, d.level &amp; 0xffff desc, d.atk desc, d.def desc, t.name
    </select>
</mapper>