<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weird.mapper.main.PackageCardMapper">
    <cache type="org.apache.ibatis.cache.impl.PerpetualCache"
            size="2048"
            eviction="LRU"
            readOnly="false"/>
    <resultMap id="BaseResultMap" type="com.weird.model.PackageCardModel">
        <id column="card_pk" jdbcType="INTEGER" property="cardPk"/>
        <result column="card_name" jdbcType="VARCHAR" property="cardName"/>
        <result column="package_id" jdbcType="INTEGER" property="packageId"/>
        <result column="need_coin" jdbcType="INTEGER" property="needCoin"/>
        <result column="rare" jdbcType="VARCHAR" property="rare"/>
    </resultMap>
    <sql id="Base_Column_List">
        card_pk, card_name, package_id, rare, need_coin
    </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from package_card
        where card_pk = #{cardPk,jdbcType=BIGINT}
    </delete>
    <insert id="insertSelective" parameterType="com.weird.model.PackageCardModel">
        insert into package_card
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cardPk != null">
                card_pk,
            </if>
            <if test="cardName != null">
                card_name,
            </if>
            <if test="packageId != null">
                package_id,
            </if>
            <if test="rare != null">
                rare,
            </if>
            <if test="needCoin != null">
                need_coin,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cardPk != null">
                #{cardPk,jdbcType=BIGINT},
            </if>
            <if test="cardName != null">
                #{cardName,jdbcType=VARCHAR},
            </if>
            <if test="packageId != null">
                #{packageId,jdbcType=INTEGER},
            </if>
            <if test="rare != null">
                #{rare,jdbcType=VARCHAR},
            </if>
            <if test="needCoin != null">
                #{needCoin,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.weird.model.PackageCardModel">
        update package_card
        <set>
            <if test="cardName != null">
                card_name = #{cardName,jdbcType=VARCHAR},
            </if>
            <if test="packageId != null">
                package_id = #{packageId,jdbcType=INTEGER},
            </if>
            <if test="rare != null">
                rare = #{rare,jdbcType=VARCHAR},
            </if>
            <if test="needCoin != null">
                need_coin = #{needCoin,jdbcType=INTEGER},
            </if>
        </set>
        where card_pk = #{cardPk,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.weird.model.PackageCardModel">
        update package_card
        set card_name = #{cardName,jdbcType=VARCHAR},
        package_id = #{packageId,jdbcType=INTEGER},
        rare = #{rare,jdbcType=VARCHAR},
        need_coin = #{needCoin,jdbcType=INTEGER}
        where card_pk = #{cardPk,jdbcType=BIGINT}
    </update>

    <!-- 自定义 -->
    <select id="selectInPackage" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_card
        where package_id = #{packageId} and card_name like concat("%",#{name},"%")
    </select>

    <select id="selectInPackageDistinct" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_card
        where package_id = #{packageId} and card_name = #{name}
    </select>

    <select id="selectByNameDistinct" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_card
        where card_name = #{name}
    </select>

    <insert id="insert" parameterType="com.weird.model.PackageCardModel"
            useGeneratedKeys="true" keyProperty="packageId">
        insert into package_card (card_name,
        package_id, rare)
        values (#{cardName,jdbcType=VARCHAR},
        #{packageId,jdbcType=INTEGER}, #{rare,jdbcType=VARCHAR})
    </insert>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_card
        where card_pk = #{cardPk,jdbcType=BIGINT}
    </select>

    <select id="selectByNameListDistinct" resultType="java.lang.String">
        select card_name from package_card
        where card_name in
        <foreach collection="list" item="cardname" open="(" close=")" separator=",">
            #{cardname}
        </foreach>
    </select>

    <insert id="insertByRareBatch">
        insert into package_card (card_name,
        package_id, rare)
        values
        <foreach collection="list" item="cardName" separator=",">
        (
            #{cardName,jdbcType=VARCHAR},
            #{packageId,jdbcType=INTEGER},
            #{rare,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>

    <select id="selectRare" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from package_card
        where package_id = #{packageId} and (rare = "SR" or rare = "UR" or rare = "HR")
    </select>
</mapper>